{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janni\\\\Documents\\\\Programmierung\\\\Inventory\\\\inventory-frontend\\\\src\\\\components\\\\loginSignUp\\\\index.tsx\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './style.module.scss'; // Stelle sicher, dass deine Styles richtig eingebunden sind.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Hier sollte deine echte Authentifizierungslogik implementiert werden.\n    // Zum Beispiel: Überprüfe die Anmeldeinformationen mit einem Server.\n    // Für dieses Beispiel verwenden wir eine einfache Überprüfung.\n    if (username === 'benutzer' && password === 'passwort') {\n      setLoggedIn(true);\n    } else {\n      alert('Login fehlgeschlagen. Überprüfe Benutzername und Passwort.');\n    }\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    // Hier könntest du weitere Aufräumarbeiten durchführen, wenn nötig.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style,\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Erfolgreich eingeloggt!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Benutzername:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Passwort:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"uppCGiJLOrKShQHaVIHHk2qND0Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","loggedIn","setLoggedIn","handleLogin","alert","handleLogout","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/janni/Documents/Programmierung/Inventory/inventory-frontend/src/components/loginSignUp/index.tsx"],"sourcesContent":["// App.js\r\nimport React, { useState } from 'react';\r\nimport './style.module.scss'; // Stelle sicher, dass deine Styles richtig eingebunden sind.\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // Hier sollte deine echte Authentifizierungslogik implementiert werden.\r\n    // Zum Beispiel: Überprüfe die Anmeldeinformationen mit einem Server.\r\n    // Für dieses Beispiel verwenden wir eine einfache Überprüfung.\r\n    if (username === 'benutzer' && password === 'passwort') {\r\n      setLoggedIn(true);\r\n    } else {\r\n      alert('Login fehlgeschlagen. Überprüfe Benutzername und Passwort.');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setLoggedIn(false);\r\n    // Hier könntest du weitere Aufräumarbeiten durchführen, wenn nötig.\r\n  };\r\n\r\n  return (\r\n    <div className={style}>\r\n      {loggedIn ? (\r\n        <div>\r\n          <h2>Erfolgreich eingeloggt!</h2>\r\n          <button onClick={handleLogout}>Logout</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Login</h2>\r\n          <label>\r\n            Benutzername:\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Passwort:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA;IACA,IAAIN,QAAQ,KAAK,UAAU,IAAIE,QAAQ,KAAK,UAAU,EAAE;MACtDG,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLE,KAAK,CAAC,4DAA4D,CAAC;IACrE;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBH,WAAW,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,oBACER,OAAA;IAAKY,SAAS,EAAEC,KAAM;IAAAC,QAAA,EACnBP,QAAQ,gBACPP,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChClB,OAAA;QAAQmB,OAAO,EAAER,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAENlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdlB,OAAA;QAAAc,QAAA,GAAO,eAEL,eAAAd,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAElB,QAAS;UAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRlB,OAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlB,OAAA;QAAAc,QAAA,GAAO,WAEL,eAAAd,OAAA;UACEoB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEhB,QAAS;UAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRlB,OAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlB,OAAA;QAAQmB,OAAO,EAAEV,WAAY;QAAAK,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtDID,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}